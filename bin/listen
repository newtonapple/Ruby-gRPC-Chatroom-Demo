#!/usr/bin/env ruby

require "bundler/setup"
require "chat/client"

def run(num_of_messages)
  port = (ENV["PORT"] || 50051).to_i
  host = ENV["HOST"] || 'localhost'
  uri = "#{host}:#{port}"
  client = Chat::Client.new(uri)
  if num_of_messages == 0
    puts "*** Listening @ #{uri}..."
    messages = client.listen
    count = 0
    messages.each { |msg| count += 1; print_message(msg, count) }
    puts "Server terminated connection..."
  else
    puts "*** Listening @ #{uri}... Stream will be cancelled after #{num_of_messages} messages..."
    op = client.listen(true)
    messages = op.execute
    num_of_messages.times { |i| print_message(messages.next, i+1) }
    puts "*** Sleeping for 10 seconds before cancellation..."
    sleep(10)
    op.cancel
    puts "*** Cancelled!"
    begin
      messages.next
    rescue Exception => e
      puts "*** Can't read stream any more: #{e.inspect}"
    end
    puts "*** Exiting"
  end
end

def print_message(msg, count)
  ts = Time.at(msg.timestamp.seconds, msg.timestamp.nanos / 1000)
  puts "[#{ts} | ##{msg.uuid} | @#{msg.user_name}] (#{count}):\n\t#{msg.text}"
end

if __FILE__ == $0
  run(ARGV[0].to_i)
end
